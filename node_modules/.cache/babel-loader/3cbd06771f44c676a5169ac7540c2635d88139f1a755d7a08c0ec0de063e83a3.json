{"ast":null,"code":"// api/interviewQuestions.js\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nconst genAI = new GoogleGenerativeAI(AIzaSyAPHdWorSSUL0wsOo2EQFOp6_LCfQ0bWH8);\nexport const getInterviewQA = async (jobTitle, resumeKeywords, level) => {\n  const prompt = `\nYou're an AI Interview Coach.\n\nJob Role: ${jobTitle}\nResume Keywords: ${resumeKeywords.join(', ')}\nDifficulty Level: ${level}\n\nGenerate 5 interview questions and answers for the role. \nInclude both technical and behavioral questions.\nFormat the result as:\nQ1: ...\nA1: ...\nQ2: ...\nA2: ...\n`;\n  try {\n    const model = genAI.getGenerativeModel({\n      model: 'gemini-pro'\n    });\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    return response.text();\n  } catch (error) {\n    console.error('Error generating Q&A:', error);\n    return 'Failed to generate questions. Try again later.';\n  }\n};","map":{"version":3,"names":["GoogleGenerativeAI","genAI","AIzaSyAPHdWorSSUL0wsOo2EQFOp6_LCfQ0bWH8","getInterviewQA","jobTitle","resumeKeywords","level","prompt","join","model","getGenerativeModel","result","generateContent","response","text","error","console"],"sources":["D:/projects/resume-checker-ai/frontend/src/pages/api/interviewQuestions.js"],"sourcesContent":["// api/interviewQuestions.js\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\n\r\nconst genAI = new GoogleGenerativeAI(AIzaSyAPHdWorSSUL0wsOo2EQFOp6_LCfQ0bWH8);\r\n\r\nexport const getInterviewQA = async (jobTitle, resumeKeywords, level) => {\r\n  const prompt = `\r\nYou're an AI Interview Coach.\r\n\r\nJob Role: ${jobTitle}\r\nResume Keywords: ${resumeKeywords.join(', ')}\r\nDifficulty Level: ${level}\r\n\r\nGenerate 5 interview questions and answers for the role. \r\nInclude both technical and behavioral questions.\r\nFormat the result as:\r\nQ1: ...\r\nA1: ...\r\nQ2: ...\r\nA2: ...\r\n`;\r\n\r\n  try {\r\n    const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\r\n    const result = await model.generateContent(prompt);\r\n    const response = await result.response;\r\n    return response.text();\r\n  } catch (error) {\r\n    console.error('Error generating Q&A:', error);\r\n    return 'Failed to generate questions. Try again later.';\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,uBAAuB;AAE1D,MAAMC,KAAK,GAAG,IAAID,kBAAkB,CAACE,uCAAuC,CAAC;AAE7E,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,EAAEC,KAAK,KAAK;EACvE,MAAMC,MAAM,GAAG;AACjB;AACA;AACA,YAAYH,QAAQ;AACpB,mBAAmBC,cAAc,CAACG,IAAI,CAAC,IAAI,CAAC;AAC5C,oBAAoBF,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EAEC,IAAI;IACF,MAAMG,KAAK,GAAGR,KAAK,CAACS,kBAAkB,CAAC;MAAED,KAAK,EAAE;IAAa,CAAC,CAAC;IAC/D,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAACL,MAAM,CAAC;IAClD,MAAMM,QAAQ,GAAG,MAAMF,MAAM,CAACE,QAAQ;IACtC,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,gDAAgD;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}