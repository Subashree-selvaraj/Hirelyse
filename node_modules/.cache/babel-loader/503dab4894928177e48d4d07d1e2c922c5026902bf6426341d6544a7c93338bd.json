{"ast":null,"code":"// api/interviewQuestions.js\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nconst genAI = new GoogleGenerativeAI('YOUR_API_KEY');\nexport const getInterviewQA = async (jobTitle, resumeKeywords, level) => {\n  const prompt = `\nYou're an AI Interview Coach.\n\nJob Role: ${jobTitle}\nResume Keywords: ${resumeKeywords.join(', ')}\nDifficulty Level: ${level}\n\nGenerate 5 interview questions and answers for the role. \nInclude both technical and behavioral questions.\nFormat the result as:\nQ1: ...\nA1: ...\nQ2: ...\nA2: ...\n`;\n  try {\n    const model = genAI.getGenerativeModel({\n      model: 'gemini-pro'\n    });\n    const result = await model.generateContent([{\n      role: 'user',\n      parts: [{\n        text: prompt\n      }]\n    }]);\n    const response = await result.response;\n    return await response.text();\n  } catch (error) {\n    console.error('Error generating Q&A:', error);\n    return 'Failed to generate questions. Try again later.';\n  }\n};","map":{"version":3,"names":["GoogleGenerativeAI","genAI","getInterviewQA","jobTitle","resumeKeywords","level","prompt","join","model","getGenerativeModel","result","generateContent","role","parts","text","response","error","console"],"sources":["D:/projects/resume-checker-ai/frontend/src/pages/api/interviewQuestions.js"],"sourcesContent":["// api/interviewQuestions.js\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\n\r\nconst genAI = new GoogleGenerativeAI('YOUR_API_KEY');\r\n\r\nexport const getInterviewQA = async (jobTitle, resumeKeywords, level) => {\r\n  const prompt = `\r\nYou're an AI Interview Coach.\r\n\r\nJob Role: ${jobTitle}\r\nResume Keywords: ${resumeKeywords.join(', ')}\r\nDifficulty Level: ${level}\r\n\r\nGenerate 5 interview questions and answers for the role. \r\nInclude both technical and behavioral questions.\r\nFormat the result as:\r\nQ1: ...\r\nA1: ...\r\nQ2: ...\r\nA2: ...\r\n`;\r\n\r\n  try {\r\n    const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\r\n\r\n    const result = await model.generateContent([\r\n      {\r\n        role: 'user',\r\n        parts: [{ text: prompt }],\r\n      },\r\n    ]);\r\n\r\n    const response = await result.response;\r\n    return await response.text();\r\n  } catch (error) {\r\n    console.error('Error generating Q&A:', error);\r\n    return 'Failed to generate questions. Try again later.';\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,uBAAuB;AAE1D,MAAMC,KAAK,GAAG,IAAID,kBAAkB,CAAC,cAAc,CAAC;AAEpD,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,EAAEC,KAAK,KAAK;EACvE,MAAMC,MAAM,GAAG;AACjB;AACA;AACA,YAAYH,QAAQ;AACpB,mBAAmBC,cAAc,CAACG,IAAI,CAAC,IAAI,CAAC;AAC5C,oBAAoBF,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EAEC,IAAI;IACF,MAAMG,KAAK,GAAGP,KAAK,CAACQ,kBAAkB,CAAC;MAAED,KAAK,EAAE;IAAa,CAAC,CAAC;IAE/D,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAAC,CACzC;MACEC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAER;MAAO,CAAC;IAC1B,CAAC,CACF,CAAC;IAEF,MAAMS,QAAQ,GAAG,MAAML,MAAM,CAACK,QAAQ;IACtC,OAAO,MAAMA,QAAQ,CAACD,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,gDAAgD;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}