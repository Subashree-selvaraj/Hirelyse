{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\resume-checker-ai\\\\frontend\\\\src\\\\components\\\\JobSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobSuggestions({\n  resumeKeywords\n}) {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n\n  // Fetch jobs based on resume keywords\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          url: 'https://jsearch.p.rapidapi.com/search',\n          params: {\n            query: resumeKeywords.join(\" \"),\n            page: '1',\n            num_pages: '1'\n          },\n          headers: {\n            'X-RapidAPI-Key': '',\n            'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\n          }\n        };\n        const res = await axios.request(options);\n        setJobs(res.data.data || []);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Failed to fetch jobs:\", err);\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, [resumeKeywords]);\n\n  // Handle \"Practice Now\" click\n  const handlePracticeClick = job => {\n    setSelectedJob(job);\n    setDifficulty(\"\");\n    setQuestions([]);\n  };\n\n  // Handle difficulty selection\n  const handleDifficultyChange = async event => {\n    const selectedDifficulty = event.target.value;\n    setDifficulty(selectedDifficulty);\n    if (selectedJob && selectedDifficulty) {\n      try {\n        const response = await axios.post(\"http://localhost:5000/generate-questions\", {\n          jobRole: selectedJob.job_title,\n          difficulty: selectedDifficulty\n        });\n        setQuestions(response.data.questions);\n      } catch (err) {\n        console.error(\"Failed to fetch questions:\", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD25 Job Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading job listings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: job.job_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), \" at \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: job.employer_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 79\n        }, this), \"\\uD83D\\uDCCD \", job.job_city, \", \", job.job_country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: job.job_apply_link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Apply Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePracticeClick(job),\n          children: \"Practice Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), selectedJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Practice Questions for \", selectedJob.job_title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Difficulty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: difficulty,\n        onChange: handleDifficultyChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Beginner\",\n          children: \"Beginner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Intermediate\",\n          children: \"Intermediate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Advanced\",\n          children: \"Advanced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Generated Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: questions.map((question, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: question\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(JobSuggestions, \"kaDjRjCCGUpjCL3pZKBILmBjYz8=\");\n_c = JobSuggestions;\nexport default JobSuggestions;\nvar _c;\n$RefreshReg$(_c, \"JobSuggestions\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","JobSuggestions","resumeKeywords","_s","jobs","setJobs","loading","setLoading","selectedJob","setSelectedJob","difficulty","setDifficulty","questions","setQuestions","useEffect","fetchJobs","options","method","url","params","query","join","page","num_pages","headers","res","request","data","err","console","error","handlePracticeClick","job","handleDifficultyChange","event","selectedDifficulty","target","value","response","post","jobRole","job_title","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","employer_name","job_city","job_country","href","job_apply_link","rel","onClick","onChange","length","question","idx","_c","$RefreshReg$"],"sources":["D:/projects/resume-checker-ai/frontend/src/components/JobSuggestions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction JobSuggestions({ resumeKeywords }) {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  // Fetch jobs based on resume keywords\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const options = {\r\n          method: 'GET',\r\n          url: 'https://jsearch.p.rapidapi.com/search',\r\n          params: {\r\n            query: resumeKeywords.join(\" \"),\r\n            page: '1',\r\n            num_pages: '1'\r\n          },\r\n          headers: {\r\n            'X-RapidAPI-Key': '',\r\n            'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n          }\r\n        };\r\n        const res = await axios.request(options);\r\n        setJobs(res.data.data || []);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch jobs:\", err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [resumeKeywords]);\r\n\r\n  // Handle \"Practice Now\" click\r\n  const handlePracticeClick = (job) => {\r\n    setSelectedJob(job);\r\n    setDifficulty(\"\");\r\n    setQuestions([]);\r\n  };\r\n\r\n  // Handle difficulty selection\r\n  const handleDifficultyChange = async (event) => {\r\n    const selectedDifficulty = event.target.value;\r\n    setDifficulty(selectedDifficulty);\r\n\r\n    if (selectedJob && selectedDifficulty) {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/generate-questions\", {\r\n          jobRole: selectedJob.job_title,\r\n          difficulty: selectedDifficulty\r\n        });\r\n        setQuestions(response.data.questions);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch questions:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>🔥 Job Suggestions</h2>\r\n      {loading ? (\r\n        <p>Loading job listings...</p>\r\n      ) : (\r\n        <ul>\r\n          {jobs.map((job, index) => (\r\n            <li key={index}>\r\n              <strong>{job.job_title}</strong> at <em>{job.employer_name}</em><br />\r\n              📍 {job.job_city}, {job.job_country}<br />\r\n              <a href={job.job_apply_link} target=\"_blank\" rel=\"noopener noreferrer\">Apply Now</a>\r\n              <button onClick={() => handlePracticeClick(job)}>Practice Now</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {selectedJob && (\r\n        <div>\r\n          <h3>Practice Questions for {selectedJob.job_title}</h3>\r\n          <label>Select Difficulty:</label>\r\n          <select value={difficulty} onChange={handleDifficultyChange}>\r\n            <option value=\"\">Select...</option>\r\n            <option value=\"Beginner\">Beginner</option>\r\n            <option value=\"Intermediate\">Intermediate</option>\r\n            <option value=\"Advanced\">Advanced</option>\r\n          </select>\r\n\r\n          {questions.length > 0 && (\r\n            <div>\r\n              <h4>Generated Questions:</h4>\r\n              <ul>\r\n                {questions.map((question, idx) => (\r\n                  <li key={idx}>{question}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSuggestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}