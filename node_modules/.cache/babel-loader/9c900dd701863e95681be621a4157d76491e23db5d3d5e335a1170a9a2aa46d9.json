{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\resume-checker-ai\\\\frontend\\\\src\\\\components\\\\JobSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobSuggestions({\n  keywords = [],\n  summary = \"\"\n}) {\n  _s();\n  4;\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      if (keywords.length === 0 && !summary) {\n        setLoading(false);\n        return;\n      }\n\n      // Combine keywords and summary to form the query\n      const query = keywords.slice(0, 5).join(\" \") || summary.slice(0, 100);\n      const options = {\n        method: 'GET',\n        url: 'https://jsearch.p.rapidapi.com/search',\n        params: {\n          query: query || 'software engineer',\n          // fallback\n          page: '1',\n          num_pages: '1'\n        },\n        headers: {\n          'X-RapidAPI-Key': '5f0a45efc5msha459b3624abbf5fp178efejsn4ade39898509',\n          'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\n        }\n      };\n      try {\n        const res = await axios.request(options);\n        setJobs(res.data.data || []);\n      } catch (err) {\n        console.error(\"Failed to fetch jobs:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, [keywords, summary]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      backgroundColor: \"#fff\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      boxShadow: \"0 0 10px #eee\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD25 Job Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading job listings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : jobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: job.job_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 47\n        }, this), job.employer_name, \" \\u2013 \", job.job_city, \", \", job.job_country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: job.job_apply_link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Apply Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No job matches found based on your resume keywords.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(JobSuggestions, \"xAXs/kqjedBdxYZ+TLlF70OyTQI=\");\n_c = JobSuggestions;\nexport default JobSuggestions;\nvar _c;\n$RefreshReg$(_c, \"JobSuggestions\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","JobSuggestions","keywords","summary","_s","jobs","setJobs","loading","setLoading","fetchJobs","length","query","slice","join","options","method","url","params","page","num_pages","headers","res","request","data","err","console","error","style","marginTop","backgroundColor","padding","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","marginBottom","job_title","employer_name","job_city","job_country","href","job_apply_link","target","rel","_c","$RefreshReg$"],"sources":["D:/projects/resume-checker-ai/frontend/src/components/JobSuggestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction JobSuggestions({ keywords = [], summary = \"\" }) {4\r\n  \r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      if (keywords.length === 0 && !summary) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Combine keywords and summary to form the query\r\n      const query = keywords.slice(0, 5).join(\" \") || summary.slice(0, 100);\r\n\r\n      const options = {\r\n        method: 'GET',\r\n        url: 'https://jsearch.p.rapidapi.com/search',\r\n        params: {\r\n          query: query || 'software engineer', // fallback\r\n          page: '1',\r\n          num_pages: '1'\r\n        },\r\n        headers: {\r\n          'X-RapidAPI-Key': '5f0a45efc5msha459b3624abbf5fp178efejsn4ade39898509',\r\n          'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n        }\r\n      };\r\n\r\n      try {\r\n        const res = await axios.request(options);\r\n        setJobs(res.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch jobs:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [keywords, summary]);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\", backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"10px\", boxShadow: \"0 0 10px #eee\" }}>\r\n      <h2>ðŸ”¥ Job Suggestions</h2>\r\n      {loading ? (\r\n        <p>Loading job listings...</p>\r\n      ) : jobs.length > 0 ? (\r\n        <ul>\r\n          {jobs.map((job, index) => (\r\n            <li key={index} style={{ marginBottom: \"15px\" }}>\r\n              <strong>{job.job_title}</strong><br />\r\n              {job.employer_name} â€“ {job.job_city}, {job.job_country}<br />\r\n              <a href={job.job_apply_link} target=\"_blank\" rel=\"noopener noreferrer\">Apply Now</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No job matches found based on your resume keywords.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSuggestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}