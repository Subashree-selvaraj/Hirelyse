{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\resume-checker-ai\\\\frontend\\\\src\\\\components\\\\JobSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobSuggestions({\n  keywords = [],\n  summary = \"\"\n}) {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activePracticeIndex, setActivePracticeIndex] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState({});\n  const [questions, setQuestions] = useState({});\n  const [answers, setAnswers] = useState({});\n  const [showAnswers, setShowAnswers] = useState({});\n  const [questionLoading, setQuestionLoading] = useState(false);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      if (keywords.length === 0 && !summary) {\n        setLoading(false);\n        return;\n      }\n      const query = keywords.slice(0, 5).join(\" \") || summary.slice(0, 100);\n      const options = {\n        method: 'GET',\n        url: 'https://jsearch.p.rapidapi.com/search',\n        params: {\n          query: query || 'software engineer',\n          page: '1',\n          num_pages: '1'\n        },\n        headers: {\n          'X-RapidAPI-Key': '5f0a45efc5msha459b3624abbf5fp178efejsn4ade39898509',\n          'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\n        }\n      };\n      try {\n        const res = await axios.request(options);\n        setJobs(res.data.data || []);\n      } catch (err) {\n        console.error(\"Failed to fetch jobs:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, [keywords, summary]);\n  const handlePracticeClick = async (jobTitle, index) => {\n    const level = selectedLevel[index] || \"Beginner\";\n\n    // If already active, toggle off\n    if (activePracticeIndex === index) {\n      setActivePracticeIndex(null);\n      return;\n    }\n    setActivePracticeIndex(index);\n    setQuestionLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/interview-questions\", {\n        job_role: jobTitle,\n        level: level\n      });\n      setQuestions({\n        ...questions,\n        [index]: res.data.questions\n      });\n      setAnswers({\n        ...answers,\n        [index]: res.data.answers\n      });\n      setShowAnswers({}); // reset visibility\n    } catch (err) {\n      console.error(\"Error fetching questions\", err);\n      setQuestions({\n        ...questions,\n        [index]: [\"Failed to load questions.\"]\n      });\n    } finally {\n      setQuestionLoading(false);\n    }\n  };\n  const toggleAnswer = (jobIndex, questionIndex) => {\n    const key = `${jobIndex}-${questionIndex}`;\n    setShowAnswers(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      backgroundColor: \"#fff\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      boxShadow: \"0 0 10px #eee\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD25 Job Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading job listings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : jobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: 0\n      },\n      children: jobs.map((job, index) => {\n        var _questions$index;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"20px\",\n            borderBottom: \"1px solid #ddd\",\n            paddingBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: job.job_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 47\n          }, this), job.employer_name, \" \\u2013 \", job.job_city, \", \", job.job_country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: job.job_apply_link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Apply Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Practice Level: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLevel[index] || \"Beginner\",\n            onChange: e => setSelectedLevel({\n              ...selectedLevel,\n              [index]: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Beginner\",\n              children: \"Beginner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Intermediate\",\n              children: \"Intermediate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Advanced\",\n              children: \"Advanced\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePracticeClick(job.job_title, index),\n            style: {\n              marginLeft: \"10px\",\n              padding: \"6px 12px\",\n              backgroundColor: \"#28a745\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\"\n            },\n            children: activePracticeIndex === index ? \"Hide Practice\" : \"Practice Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), activePracticeIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"15px\",\n              paddingLeft: \"15px\"\n            },\n            children: questionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Generating questions...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: (_questions$index = questions[index]) === null || _questions$index === void 0 ? void 0 : _questions$index.map((q, qIndex) => {\n                var _answers$index;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    marginBottom: \"10px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Q\", qIndex + 1, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 27\n                  }, this), \" \", q, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleAnswer(index, qIndex),\n                    style: {\n                      marginTop: \"5px\",\n                      padding: \"4px 10px\",\n                      fontSize: \"12px\",\n                      backgroundColor: \"#007bff\",\n                      color: \"#fff\",\n                      border: \"none\",\n                      borderRadius: \"4px\",\n                      cursor: \"pointer\"\n                    },\n                    children: showAnswers[`${index}-${qIndex}`] ? \"Hide Answer\" : \"Show Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 27\n                  }, this), showAnswers[`${index}-${qIndex}`] && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      marginTop: \"5px\",\n                      backgroundColor: \"#f8f9fa\",\n                      padding: \"8px\",\n                      borderRadius: \"5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Answer:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 31\n                    }, this), \" \", ((_answers$index = answers[index]) === null || _answers$index === void 0 ? void 0 : _answers$index[qIndex]) || \"Answer not available\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 29\n                  }, this)]\n                }, qIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No job matches found based on your resume keywords.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(JobSuggestions, \"Nmue08hQplo1i8W+ALVAZX2+lPQ=\");\n_c = JobSuggestions;\nexport default JobSuggestions;\nvar _c;\n$RefreshReg$(_c, \"JobSuggestions\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","JobSuggestions","keywords","summary","_s","jobs","setJobs","loading","setLoading","activePracticeIndex","setActivePracticeIndex","selectedLevel","setSelectedLevel","questions","setQuestions","answers","setAnswers","showAnswers","setShowAnswers","questionLoading","setQuestionLoading","fetchJobs","length","query","slice","join","options","method","url","params","page","num_pages","headers","res","request","data","err","console","error","handlePracticeClick","jobTitle","index","level","post","job_role","toggleAnswer","jobIndex","questionIndex","key","prev","style","marginTop","backgroundColor","padding","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","listStyle","map","job","_questions$index","marginBottom","borderBottom","paddingBottom","job_title","employer_name","job_city","job_country","href","job_apply_link","target","rel","value","onChange","e","onClick","marginLeft","color","border","cursor","paddingLeft","q","qIndex","_answers$index","fontSize","_c","$RefreshReg$"],"sources":["D:/projects/resume-checker-ai/frontend/src/components/JobSuggestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction JobSuggestions({ keywords = [], summary = \"\" }) {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activePracticeIndex, setActivePracticeIndex] = useState(null);\r\n  const [selectedLevel, setSelectedLevel] = useState({});\r\n  const [questions, setQuestions] = useState({});\r\n  const [answers, setAnswers] = useState({});\r\n  const [showAnswers, setShowAnswers] = useState({});\r\n  const [questionLoading, setQuestionLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      if (keywords.length === 0 && !summary) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const query = keywords.slice(0, 5).join(\" \") || summary.slice(0, 100);\r\n\r\n      const options = {\r\n        method: 'GET',\r\n        url: 'https://jsearch.p.rapidapi.com/search',\r\n        params: {\r\n          query: query || 'software engineer',\r\n          page: '1',\r\n          num_pages: '1'\r\n        },\r\n        headers: {\r\n          'X-RapidAPI-Key': '5f0a45efc5msha459b3624abbf5fp178efejsn4ade39898509',\r\n          'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n        }\r\n      };\r\n\r\n      try {\r\n        const res = await axios.request(options);\r\n        setJobs(res.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch jobs:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [keywords, summary]);\r\n\r\n  const handlePracticeClick = async (jobTitle, index) => {\r\n    const level = selectedLevel[index] || \"Beginner\";\r\n\r\n    // If already active, toggle off\r\n    if (activePracticeIndex === index) {\r\n      setActivePracticeIndex(null);\r\n      return;\r\n    }\r\n\r\n    setActivePracticeIndex(index);\r\n    setQuestionLoading(true);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/interview-questions\", {\r\n        job_role: jobTitle,\r\n        level: level\r\n      });\r\n\r\n      setQuestions({ ...questions, [index]: res.data.questions });\r\n      setAnswers({ ...answers, [index]: res.data.answers });\r\n      setShowAnswers({}); // reset visibility\r\n    } catch (err) {\r\n      console.error(\"Error fetching questions\", err);\r\n      setQuestions({ ...questions, [index]: [\"Failed to load questions.\"] });\r\n    } finally {\r\n      setQuestionLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleAnswer = (jobIndex, questionIndex) => {\r\n    const key = `${jobIndex}-${questionIndex}`;\r\n    setShowAnswers((prev) => ({ ...prev, [key]: !prev[key] }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\", backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"10px\", boxShadow: \"0 0 10px #eee\" }}>\r\n      <h2>🔥 Job Suggestions</h2>\r\n      {loading ? (\r\n        <p>Loading job listings...</p>\r\n      ) : jobs.length > 0 ? (\r\n        <ul style={{ listStyle: \"none\", padding: 0 }}>\r\n          {jobs.map((job, index) => (\r\n            <li key={index} style={{ marginBottom: \"20px\", borderBottom: \"1px solid #ddd\", paddingBottom: \"15px\" }}>\r\n              <strong>{job.job_title}</strong><br />\r\n              {job.employer_name} – {job.job_city}, {job.job_country}<br />\r\n              <a href={job.job_apply_link} target=\"_blank\" rel=\"noopener noreferrer\">Apply Now</a>\r\n              <br /><br />\r\n              <label>Practice Level: </label>\r\n              <select\r\n                value={selectedLevel[index] || \"Beginner\"}\r\n                onChange={(e) => setSelectedLevel({ ...selectedLevel, [index]: e.target.value })}\r\n              >\r\n                <option value=\"Beginner\">Beginner</option>\r\n                <option value=\"Intermediate\">Intermediate</option>\r\n                <option value=\"Advanced\">Advanced</option>\r\n              </select>\r\n              <button\r\n                onClick={() => handlePracticeClick(job.job_title, index)}\r\n                style={{\r\n                  marginLeft: \"10px\",\r\n                  padding: \"6px 12px\",\r\n                  backgroundColor: \"#28a745\",\r\n                  color: \"#fff\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                {activePracticeIndex === index ? \"Hide Practice\" : \"Practice Now\"}\r\n              </button>\r\n\r\n              {/* Practice Section */}\r\n              {activePracticeIndex === index && (\r\n                <div style={{ marginTop: \"15px\", paddingLeft: \"15px\" }}>\r\n                  {questionLoading ? (\r\n                    <p>Generating questions...</p>\r\n                  ) : (\r\n                    <ul>\r\n                      {questions[index]?.map((q, qIndex) => (\r\n                        <li key={qIndex} style={{ marginBottom: \"10px\" }}>\r\n                          <strong>Q{qIndex + 1}:</strong> {q}\r\n                          <br />\r\n                          <button\r\n                            onClick={() => toggleAnswer(index, qIndex)}\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              padding: \"4px 10px\",\r\n                              fontSize: \"12px\",\r\n                              backgroundColor: \"#007bff\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              borderRadius: \"4px\",\r\n                              cursor: \"pointer\"\r\n                            }}\r\n                          >\r\n                            {showAnswers[`${index}-${qIndex}`] ? \"Hide Answer\" : \"Show Answer\"}\r\n                          </button>\r\n                          {showAnswers[`${index}-${qIndex}`] && (\r\n                            <p style={{ marginTop: \"5px\", backgroundColor: \"#f8f9fa\", padding: \"8px\", borderRadius: \"5px\" }}>\r\n                              <strong>Answer:</strong> {answers[index]?.[qIndex] || \"Answer not available\"}\r\n                            </p>\r\n                          )}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No job matches found based on your resume keywords.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSuggestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}